-- –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≥–ª–æ–±–∞–ª—å–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Ç–µ–∫—É—â–µ–π —Ç–µ–º—ã
vim.g.is_day_mode = vim.o.background == "light"

require("bufferline").setup({
	options = {
		numbers = "none",
		close_command = "bdelete",
		right_mouse_command = "bdelete!",
		left_mouse_command = "buffer",
		middle_mouse_command = nil,
		indicator = {
			icon = "‚ñé", -- –¢–æ–Ω–∫–∏–π –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –±—É—Ñ–µ—Ä–∞
			style = "icon",
		},
		buffer_close_icon = " Ó©∂ ", -- –ö—Ä–µ—Å—Ç–∏–∫ –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –±—É—Ñ–µ—Ä–∞
		modified_icon = "[Û∞êï]", -- –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –Ω–µ—Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π
		close_icon = " Ó©∂ ", -- –ì–ª–æ–±–∞–ª—å–Ω–∞—è –∫–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –≤—Å–µ—Ö –±—É—Ñ–µ—Ä–æ–≤
		left_trunc_marker = "¬´",
		right_trunc_marker = "¬ª",
		diagnostics = "nvim_lsp",
		diagnostics_update_in_insert = false,
		diagnostics_indicator = function(count, level)
			local icon = level:match("error") and "ÔÅó " or "ÔÅ± "
			return icon .. count
		end,
		offsets = {
			{
				filetype = "neo-tree",
				text = function()
					return require("pacman").get_pacman_text()
				end,
				text_align = "center",
				separator = true,
			},
		},
		show_buffer_icons = true,
		show_buffer_close_icons = true,
		show_tab_indicators = true,
		enforce_regular_tabs = false, -- –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø–æ–¥—Å—Ç—Ä–æ–π–∫–∞ —à–∏—Ä–∏–Ω—ã
		always_show_bufferline = true,
		separator_style = "thin", -- –º–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω—ã–π —Å—Ç–∏–ª—å
		custom_areas = {
			right = function()
				local mode = vim.g.is_day_mode and " ÔàÖ  Û∞ñ®  ‚ñé" or " ÔàÑ  ÔìÆ  ‚ñé"
				return {
					{ text = mode, padding = 1 },
					{ text = "üåäüåäüåä " },
					{
						text = " Ó©∂ ",
						fg = "#FFFFFF",
						bg = "#FF5F5F",
						padding = 1,
					},
				}
			end,
		},
	},
	-- –£–¥–∞–ª—è–µ–º highlights, —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ü–≤–µ—Ç–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
})

-- –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–µ–∂–¥—É —Å–≤–µ—Ç–ª–æ–π –∏ —Ç—ë–º–Ω–æ–π —Ç–µ–º–æ–π —Å dynamic source
vim.keymap.set("n", "<leader>tn", function()
	-- –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É colorscheme.lua
	local colorscheme_path = vim.fn.stdpath("config") .. "/lua/core/colorscheme.lua"

	-- –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º —Ä–µ–∂–∏–º —Ç–µ–º—ã
	vim.g.is_day_mode = not vim.g.is_day_mode

	-- –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–æ–Ω –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–∂–∏–º–∞
	if vim.g.is_day_mode then
		vim.o.background = "light"
		vim.notify("–°–º–µ–Ω–∞ —Ç–µ–º—ã: –î–µ–Ω—å ÔàÖ", vim.log.levels.WARN, { title = "–¢–µ–º–∞" })
	else
		vim.o.background = "dark"
		vim.notify("–°–º–µ–Ω–∞ —Ç–µ–º—ã: –ù–æ—á—å ÔàÑ", vim.log.levels.WARN, { title = "–¢–µ–º–∞" })
	end

	-- –í—ã–ø–æ–ª–Ω—è–µ–º source –¥–ª—è —Ñ–∞–π–ª–∞ colorscheme.lua
	vim.cmd("source " .. colorscheme_path)
end, { desc = "–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ç–µ–º—ã –î–µ–Ω—å/–ù–æ—á—å" })

-- –ó–∞–∫—Ä—ã—Ç–∏–µ –≤—Å–µ—Ö –±—É—Ñ–µ—Ä–æ–≤
vim.keymap.set("n", "<leader>ba", function()
	for _, buf in ipairs(vim.api.nvim_list_bufs()) do
		if vim.api.nvim_buf_is_valid(buf) and vim.bo[buf].buflisted then
			vim.cmd("bdelete " .. buf)
		end
	end
	vim.notify("–í—Å–µ –±—É—Ñ–µ—Ä—ã –∑–∞–∫—Ä—ã—Ç—ã", vim.log.levels.WARN, { title = "Bufferline" })
end, { desc = "–ó–∞–∫—Ä—ã—Ç—å –≤—Å–µ –±—É—Ñ–µ—Ä—ã" })
