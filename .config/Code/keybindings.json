[
	{
		"key": "alt+shift+y",
		"command": "editor.action.copyLinesDownAction",
		"when": "editorFocus"
	},
	{
		"key": "alt+b",
		"command": "openInDefaultBrowser.openInDefaultBrowser"
	},
	{
		"key": "shift+alt+r",
		"command": "code-runner.run"
	},
	{
		"key": "ctrl+alt+n",
		"command": "-code-runner.run"
	},

	//explorer
	{
		"key": "alt+e", // when Explorer open
		"command": "workbench.action.toggleSidebarVisibility",
		"when": "explorerViewletVisible"
	},
	//terminal
	{
		"key": "ctrl+t",
		"command": "workbench.action.terminal.toggleTerminal",
		"when": "terminal.active"
	},
	//floader
	{
		"key": "a",
		"command": "explorer.newFile",
		"when": "filesExplorerFocus && !inputFocus"
	},
	{
		"key": "shift+a",
		"command": "explorer.newFolder",
		"when": "filesExplorerFocus && !inputFocus"
	},
	//back
	{
		"key": "alt+z",
		"command": "-extension.pxToremAndRemToPx"
	},
	{
		"key": "capslock",
		"command": "workbench.action.terminal.sendSequence",
		"args": { "text": "\u001b" },
		"when": "terminalFocus"
	},
	//focus
	{
		"key": "ctrl+h",
		"command": "workbench.action.focusLeftGroup",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+w",
		"command": "workbench.action.closeActiveEditor"
	},

	//save
	{
		"key": "ctrl+enter",

		"command": "workbench.action.files.save",
		"when": "editorTextFocus"
	},
	{
		"key": "shift+alt+w",
		"command": "workbench.action.splitEditor",
		"args": { "direction": "right" },
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+w q",
		"command": "-workbench.action.closeActiveEditor",
		"when": "!editorTextFocus && !filesExplorerFocus && !searchViewletFocus && !terminalFocus && neovim.mode != 'cmdline'"
	},
	{
		"key": "ctrl+space",
		"command": "editor.action.triggerSuggest",
		"when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
	},
	{
		"key": "ctrl+space",
		"command": "-editor.action.triggerSuggest",
		"when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
	},
	{
		"key": "ctrl+q",
		"command": "-workbench.action.quit"
	},
	{
		"key": "ctrl+j",
		"command": "selectNextSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
	},
	{
		"key": "down",
		"command": "-selectNextSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
	},
	{
		"key": "ctrl+k",
		"command": "selectPrevSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
	},
	{
		"key": "up",
		"command": "-selectPrevSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
	},
	{
		"key": "ctrl+shift+alt+k",
		"command": "editor.action.copyLinesUpAction",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+shift+alt+up",
		"command": "-editor.action.copyLinesUpAction",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+shift+alt+j",
		"command": "editor.action.copyLinesDownAction",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+shift+alt+down",
		"command": "-editor.action.copyLinesDownAction",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "shift+alt+f",
		"command": "workbench.action.focusSideBar"
	},
	{
		"key": "alt+e",
		"command": "workbench.action.toggleSidebarVisibility"
	},
	{
		"key": "ctrl+b",
		"command": "-workbench.action.toggleSidebarVisibility"
	},
	{
		"key": "shift+alt+e",
		"command": "workbench.view.explorer",
		"when": "viewContainer.workbench.view.explorer.enabled"
	},
	{
		"key": "ctrl+shift+e",
		"command": "-workbench.view.explorer",
		"when": "viewContainer.workbench.view.explorer.enabled"
	},
	{
		"key": "shift+alt+x",
		"command": "workbench.view.extensions",
		"when": "viewContainer.workbench.view.extensions.enabled"
	},
	{
		"key": "shift+alt+d",
		"command": "-notebook.cell.detectLanguage",
		"when": "notebookCellEditable && notebookEditable"
	},
	{
		"key": "shift+alt+d",
		"command": "-editor.detectLanguage",
		"when": "editorTextFocus && !notebookEditable"
	},
	{
		"key": "shift+alt+d",
		"command": "workbench.view.debug",
		"when": "viewContainer.workbench.view.debug.enabled"
	},
	{
		"key": "alt+k",
		"command": "-keybindings.editor.recordSearchKeys",
		"when": "inKeybindings && inKeybindingsSearch"
	},
	{
		"key": "alt+k",
		"command": "-editor.action.accessibilityHelpConfigureKeybindings",
		"when": "accessibilityHelpIsShown && accessibleViewHasUnassignedKeybindings"
	},
	{
		"key": "alt+k",
		"command": "editor.action.moveLinesUpAction",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "alt+up",
		"command": "-editor.action.moveLinesUpAction",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "alt+j",
		"command": "editor.action.moveLinesDownAction",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "alt+down",
		"command": "-editor.action.moveLinesDownAction",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "alt+l",
		"command": "editor.action.indentLines",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "alt+h",
		"command": "editor.action.outdentLines",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+/",
		"command": "-vscode-neovim.send",
		"when": "editorTextFocus && neovim.ctrlKeysNormal./ && neovim.init && neovim.mode != 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
	},
	{
		"key": "ctrl+/",
		"command": "-vscode-neovim.send",
		"when": "editorTextFocus && neovim.ctrlKeysInsert./ && neovim.init && neovim.mode == 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
	},
	{
		"key": "shift+alt+g",
		"command": "workbench.view.scm",
		"when": "workbench.scm.active && !gitlens:disabled && config.gitlens.keymap == 'chorded'"
	},
	{
		"key": "ctrl+shift+g g",
		"command": "-workbench.view.scm",
		"when": "workbench.scm.active && !gitlens:disabled && config.gitlens.keymap == 'chorded'"
	},
	{
		"key": "ctrl+shift+f",
		"command": "workbench.action.findInFiles"
	},
	{
		"key": "ctrl+shift+f",
		"command": "-workbench.action.findInFiles"
	},
	{
		"key": "shift+enter",
		"command": "-python.execInREPL",
		"when": "config.python.REPL.sendToNativeREPL && editorTextFocus && !accessibilityModeEnabled && !jupyter.ownsSelection && !notebookEditorFocused && editorLangId == 'python' && activeEditor != 'workbench.editor.interactive'"
	},
	{
		"key": "shift+enter",
		"command": "-python.execSelectionInTerminal",
		"when": "editorTextFocus && !findInputFocussed && !jupyter.ownsSelection && !notebookEditorFocused && !replaceInputFocussed && editorLangId == 'python' && activeEditor != 'workbench.editor.interactive'"
	},
	{
		"key": "ctrl+shift+o",
		"command": "-editor.action.accessibleViewGoToSymbol",
		"when": "accessibilityHelpIsShown && accessibleViewGoToSymbolSupported || accessibleViewGoToSymbolSupported && accessibleViewIsShown"
	},
	{
		"key": "ctrl+shift+o",
		"command": "-workbench.action.gotoSymbol",
		"when": "!accessibilityHelpIsShown && !accessibleViewIsShown"
	},
	{
		"key": "ctrl+shift+o",
		"command": "-workbench.action.terminal.openDetectedLink",
		"when": "terminalFocus && terminalHasBeenCreated"
	},
	{
		"key": "shift+alt+j",
		"command": "editor.action.insertCursorBelow",
		"when": "editorTextFocus"
	},
	{
		"key": "shift+alt+down",
		"command": "-editor.action.insertCursorBelow",
		"when": "editorTextFocus"
	},
	{
		"key": "shift+alt+k",
		"command": "editor.action.insertCursorAbove",
		"when": "editorTextFocus"
	},
	{
		"key": "shift+alt+up",
		"command": "-editor.action.insertCursorAbove",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+c",
		"command": "editor.action.clipboardCopyAction"
	},
	{
		"key": "ctrl+c",
		"command": "-editor.action.clipboardCopyAction"
	},
	{
		"key": "ctrl+l",
		"command": "acceptSelectedSuggestion",
		"when": "acceptSuggestionOnEnter && suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && suggestionMakesTextEdit && textInputFocus"
	},
	{
		"key": "shift+enter",
		"command": "-python.execInREPL",
		"when": "config.python.REPL.sendToNativeREPL && editorTextFocus && !accessibilityModeEnabled && !isCompositeNotebook && !jupyter.ownsSelection && !notebookEditorFocused && editorLangId == 'python'"
	},
	{
		"key": "shift+enter",
		"command": "-python.execSelectionInTerminal",
		"when": "editorTextFocus && !findInputFocussed && !isCompositeNotebook && !jupyter.ownsSelection && !notebookEditorFocused && !replaceInputFocussed && editorLangId == 'python'"
	},
	{
		"key": "ctrl+shift+i",
		"command": "-codeium.openCodeiumCommand",
		"when": "codeium.commandEnabled && editorTextFocus && !inlineSuggestionsVisible"
	},
	{
		"key": "shift+alt+a",
		"command": "codeium.openChatView",
		"when": "true"
	},
	{
		"key": "ctrl+alt+a",
		"command": "-codeium.openChatView",
		"when": "true"
	},
	{
		"key": "alt+i",
		"command": "codeium.cancelCommandComment",
		"when": "codeium.chatPanelView.defaultViewLocation"
	},
	{
		"key": "shift+alt+p",
		"command": "petsView.focus"
	},
	{
		"key": "d",
		"command": "deleteFile",
		"when": "filesExplorerFocus && foldersViewVisible && !explorerResourceReadonly && !inputFocus && !treeFindOpen"
	},
	{
		"key": "shift+delete",
		"command": "-deleteFile",
		"when": "filesExplorerFocus && foldersViewVisible && !explorerResourceReadonly && !inputFocus && !treeFindOpen"
	},
	{
		"key": "r",
		"command": "renameFile",
		"when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
	},
	{
		"key": "f2",
		"command": "-renameFile",
		"when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
	},
	{
		"key": "x",
		"command": "filesExplorer.cut",
		"when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus && !treeFindOpen"
	},
	{
		"key": "ctrl+x",
		"command": "-filesExplorer.cut",
		"when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus && !treeFindOpen"
	},
	{
		"key": "p",
		"command": "filesExplorer.paste",
		"when": "filesExplorerFocus && foldersViewVisible && !explorerResourceReadonly && !inputFocus && !treeFindOpen"
	},
	{
		"key": "ctrl+v",
		"command": "-filesExplorer.paste",
		"when": "filesExplorerFocus && foldersViewVisible && !explorerResourceReadonly && !inputFocus && !treeFindOpen"
	},
	{
		"key": "y",
		"command": "filesExplorer.copy",
		"when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !inputFocus"
	},
	{
		"key": "ctrl+c",
		"command": "-filesExplorer.copy",
		"when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !inputFocus"
	},
	{
		"key": "space",
		"command": "list.select",
		"when": "explorerViewletVisible && filesExplorerFocus"
	},
	{
		"key": "ctrl+k",
		"command": "-extension.vim_ctrl+k",
		"when": "editorTextFocus && vim.active && vim.use<C-k> && !inDebugRepl"
	},
	{
		"key": "ctrl+j",
		"command": "-workbench.action.togglePanel"
	},
	{
		"key": "ctrl+shift+right",
		"command": "workbench.action.resizeEditorGroupRight"
	},
	{
		"key": "ctrl+shift+left",
		"command": "workbench.action.resizeEditorGroupLeft"
	},
	{
		"key": "alt+shift+l",
		"command": "workbench.action.increaseViewSize",
		"when": "editorFocus"
	},
	{
		"key": "alt+shift+h",
		"command": "workbench.action.decreaseViewSize",
		"when": "editorFocus"
	},
	{
		"key": "alt+shift+l",
		"command": "workbench.action.increaseViewSize",
		"when": "sideBarVisible"
	},
	{
		"key": "alt+shift+h",
		"command": "workbench.action.decreaseViewSize",
		"when": "sideBarVisible"
	},
	{
		"key": "ctrl+i",
		"command": "inlineChat.start",
		"when": "inlineChatHasProvider && inlineChatPossible && !editorReadonly"
	},
	{
		"key": "shift+alt+t",
		"command": "workbench.action.focusFirstEditorGroup"
	},
	{
		"key": "ctrl+1",
		"command": "-workbench.action.focusFirstEditorGroup"
	},
	// resize terminal
	{
		"key": "ctrl+j",
		"command": "workbench.action.terminal.resizePaneDown",
		"when": "terminalFocus"
	},
	{
		"key": "ctrl+k",
		"command": "workbench.action.terminal.resizePaneUp",
		"when": "terminalFocus"
	},
	// multi cursor for select
	{
		"key": "alt+d",
		"command": "editor.action.addSelectionToNextFindMatch",
		"when": "editorFocus"
	},
	{
		"key": "k",
		"command": "notebook.focusPreviousEditor",
		"when": "editorTextFocus && inputFocus && notebookEditorFocused && vim.mode == 'Normal' && notebookEditorCursorAtBoundary != 'bottom' && notebookEditorCursorAtBoundary != 'none'"
	},
	{
		"key": "k",
		"command": "-notebook.focusPreviousEditor",
		"when": "editorTextFocus && inputFocus && notebookEditorFocused && vim.mode == 'Normal' && notebookEditorCursorAtBoundary != 'bottom' && notebookEditorCursorAtBoundary != 'none'"
	},
	{
		"key": "ctrl+]",
		"command": "editor.unfold",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+shift+]",
		"command": "-editor.unfold",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+]",
		"command": "notebook.unfold",
		"when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
	},
	{
		"key": "ctrl+shift+]",
		"command": "-notebook.unfold",
		"when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
	},
	{
		"key": "ctrl+[",
		"command": "notebook.fold",
		"when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
	},
	{
		"key": "ctrl+shift+[",
		"command": "-notebook.fold",
		"when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
	},
	{
		"key": "ctrl+[",
		"command": "editor.fold",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+shift+[",
		"command": "-editor.fold",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "shift+alt+z",
		"command": "workbench.view.extension.liveshare",
		"when": "viewContainer.workbench.view.extension.liveshare.enabled"
	},
	{
		"key": "ctrl+i",
		"command": "-markdown.extension.editing.toggleItalic",
		"when": "editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/"
	},
	{
		"key": "ctrl+i",
		"command": "-workbench.action.chat.stopListeningAndSubmit",
		"when": "inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'editor' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'inline' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'quick' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'terminal' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'view' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'editor' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'inline' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'quick' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'terminal' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'view'"
	},
	{
		"key": "ctrl+i",
		"command": "-workbench.action.chat.startVoiceChat",
		"when": "chatIsEnabled && hasSpeechProvider && inChatInput && !chatSessionRequestInProgress && !editorFocus && !notebookEditorFocused && !scopedVoiceChatGettingReady && !speechToTextInProgress && !terminalChatActiveRequest || chatIsEnabled && hasSpeechProvider && inlineChatFocused && !chatSessionRequestInProgress && !editorFocus && !notebookEditorFocused && !scopedVoiceChatGettingReady && !speechToTextInProgress && !terminalChatActiveRequest"
	},
	{
		"key": "ctrl+i",
		"command": "codeium.openCodeiumCommand",
		"when": "codeium.commandEnabled && editorTextFocus && !inlineSuggestionsVisible"
	},
	{
		"key": "ctrl+i",
		"command": "-codeium.openCodeiumCommand",
		"when": "codeium.commandEnabled && editorTextFocus && !inlineSuggestionsVisible"
	},
	{
		"key": "ctrl+'",
		"command": "editor.action.quickFix",
		"when": "editorHasCodeActionsProvider && textInputFocus && !editorReadonly"
	},
	{
		"key": "k",
		"command": "list.focusUp",
		"when": "editorTextFocus && quickFixWidgetVisible"
	},
	{
		"key": "j",
		"command": "list.focusDown",
		"when": "editorTextFocus && quickFixWidgetVisible"
	},
	{
		"key": "ctrl+/",
		"command": "-notebook.commentSelectedCells",
		"when": "notebookEditable && notebookEditorFocused && !inputFocus"
	},
	{
		"key": "alt+o",
		"command": "editor.action.commentLine",
		"when": "editorTextFocus && !editorReadonly"
	}
]
